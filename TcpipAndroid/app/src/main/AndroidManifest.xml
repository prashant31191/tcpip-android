<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.tcpipandroid">


    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />



    <uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />

    <uses-permission android:name="android.permission.CHANGE_WIFI_STATE" />




    <uses-permission android:name="android.permission.READ_PHONE_STATE" />
    <uses-permission android:name="android.permission.CALL_PHONE" />
    <uses-permission android:name="android.permission.PROCESS_OUTGOING_CALLS" />
    <uses-permission android:name="android.permission.READ_CONTACTS" />
    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.READ_SYNC_STATS" />
    <uses-permission android:name="android.permission.READ_SYNC_STATS" />
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.RECORD_AUDIO" />

    <uses-permission android:name="android.permission.MOUNT_UNMOUNT_FILESYSTEMS" />
    <uses-permission android:name="android.permission.WAKE_LOCK" />
    <uses-permission android:name="android.permission.BLUETOOTH" />
    <uses-permission android:name="android.permission.MODIFY_AUDIO_SETTINGS" />
    <uses-permission android:name="android.permission.WRITE_SETTINGS"/>


    <!--for the message sms-->
    <uses-permission android:name="android.permission.WRITE_SMS" />
    <uses-permission android:name="android.permission.READ_SMS" />
    <uses-permission android:name="android.permission.RECEIVE_SMS" />


    <!-- Admob -->

    <!-- Billing for in-app purchases -->
    <uses-permission android:name="com.android.vending.BILLING" />



    <!--for the sync adapter-->
    <uses-permission
        android:name="android.permission.INTERNET"/>
    <uses-permission
        android:name="android.permission.READ_SYNC_SETTINGS"/>
    <uses-permission
        android:name="android.permission.WRITE_SYNC_SETTINGS"/>
    <uses-permission
        android:name="android.permission.AUTHENTICATE_ACCOUNTS"/>



    <application
        android:allowBackup="true"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:theme="@style/AppTheme">
        <activity
            android:name="com.ActDashboardMessage"
            android:label="@string/app_name"
            android:theme="@style/AppTheme.NoActionBar">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>



         <!--for the tcp ip-->
        <activity android:name="com.clientserverchat.ClientActivity"/>

        <activity android:name="com.clientserverchat.ServerActivity"/>

        <activity
            android:name="com.clientserverchat.ActDashboatdClientServerChat"
            android:screenOrientation="portrait"
            android:theme="@style/AppTheme.NoActionBar"
            />
        <!--end 1-->

        <activity
            android:name=".DashboardActivity"
            android:label="@string/app_name"
            android:theme="@style/AppTheme.NoActionBar">
        </activity>

        <activity android:name=".client.ClientMainActivity"/>

        <activity android:name=".server.ServerMainActivity"/>

        <!--end 2-->




        <!--for the messages-->
        <activity
            android:name="com.messages.ActMessages"
            android:screenOrientation="portrait" />
        <activity
            android:name="com.messages.ActMyMessages"
            android:screenOrientation="portrait" />
        <activity
            android:name="com.messages.ActConvoMessageBox"
            android:screenOrientation="portrait" />

        <activity
            android:name="com.messages.ActAllMessageBox"
            android:screenOrientation="portrait" />
        <activity
            android:name="com.messages.screen.ActScreenshot"
            android:screenOrientation="portrait" />




        <service android:name="com.messages.MessagingService">
        </service>

        <receiver
            android:name="com.messages.MessageReadReceiver"
            android:exported="false">
            <intent-filter>
                <action android:name="com.example.android.messagingservice.ACTION_MESSAGE_READ"/>
            </intent-filter>
        </receiver>

        <receiver
            android:name="com.messages.MessageReplyReceiver"
            android:exported="false">
            <intent-filter>
                <action android:name="com.example.android.messagingservice.ACTION_MESSAGE_REPLY"/>
            </intent-filter>
        </receiver>



        <!--for the sms-->
        <receiver android:name="com.messages.SmsBroadcastReceiver" android:exported="true" >
            <intent-filter android:priority="999" >
                <action android:name="android.provider.Telephony.SMS_RECEIVED" />
            </intent-filter>
        </receiver>



        <!--for the screen capture service-->
        <service
            android:name="com.messages.screen.ScreenshotService"
            android:exported="true" />



        <!--for the alarm study reminder-->
        <!--for the Alarm Receiver-->
        <!-- <receiver android:name="com.alarm.AlarmManagerBroadcastReceiver">
             <intent-filter>
                 <action android:name="NOTIFICATION_SERVICE" />
             </intent-filter>
         </receiver>-->

        <receiver
            android:enabled="true"
            android:exported="true"
            android:name="com.messages.utils.ReceiverRunOnStartup"
            android:permission="android.permission.RECEIVE_BOOT_COMPLETED">

            <intent-filter>
                <action android:name="android.intent.action.BOOT_COMPLETED" />
                <action android:name="android.intent.action.QUICKBOOT_POWERON" />
                <category android:name="android.intent.category.DEFAULT" />
            </intent-filter>
        </receiver>

        <!--end for the messages-->







        <!--demo sync adapter-->
        <!-- Main activity, responsible for showing a list of feed entries. -->
        <activity
            android:name="com.demosynch.EntryListActivity"
            android:label="@string/app_name" >
            <!-- This intent filter places this activity in the system's app launcher. -->

        </activity>

        <!-- ContentProvider to store feed data.

        The "authorities" here are defined as part of a ContentProvider interface. It's used here
        as an attachment point for the SyncAdapter. See res/xml/syncadapter.xml and
        SyncService.java.

        Since this ContentProvider is not exported, it will not be accessible outside of this app's
        package.

         android:syncable="true"
         -->
        <provider
            android:name="com.demosynch.provider.FeedProvider"
            android:authorities="com.example.android.network.sync.basicsyncadapter"

            android:exported="false" />

        <!-- This service implements our SyncAdapter. It needs to be exported, so that the system
        sync framework can access it. -->
        <service android:name="com.demosynch.SyncService"
            android:exported="true">
            <!-- This intent filter is required. It allows the system to launch our sync service
            as needed. -->
            <intent-filter>
                <action android:name="android.content.SyncAdapter" />
            </intent-filter>
            <!-- This points to a required XML file which describes our SyncAdapter. -->
            <meta-data android:name="android.content.SyncAdapter"
                android:resource="@xml/syncadapter" />
        </service>

        <!-- This implements the account we'll use as an attachment point for our SyncAdapter. Since
        our SyncAdapter doesn't need to authenticate the current user (it just fetches a public RSS
        feed), this account's implementation is largely empty.

        It's also possible to attach a SyncAdapter to an existing account provided by another
        package. In that case, this element could be omitted here. -->
        <service android:name="com.demosynch.accounts.GenericAccountService">
            <!-- Required filter used by the system to launch our account service. -->
            <intent-filter>
                <action android:name="android.accounts.AccountAuthenticator" />
            </intent-filter>
            <!-- This points to an XMLf ile which describes our account service. -->
            <meta-data android:name="android.accounts.AccountAuthenticator"
                android:resource="@xml/authenticator" />
        </service>

        <!--end demo syc adapter-->



        <!--for the sync adpter my-->

        <activity android:name="com.synchdata.ActSyncData"/>
        <service
            android:name="com.synchdata.SyncService"
            android:exported="true"
            android:process=":sync">
            <intent-filter>
                <action android:name="android.content.SyncAdapter"/>
            </intent-filter>
            <meta-data android:name="android.content.SyncAdapter"
                android:resource="@xml/syncadapter" />
        </service>

        <!--end my syc adapter-->

    </application>

    <!--// for the socket chat  only read by the server all messages -->
   <!--

   <application
        android:allowBackup="true"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:theme="@style/AppTheme">
        <activity
            android:name=".DashboardActivity"
            android:label="@string/app_name"
            android:theme="@style/AppTheme.NoActionBar">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>

        <activity android:name=".client.ClientMainActivity"/>

        <activity android:name=".server.ServerMainActivity"/>

    </application>-->


    <!--for the live chat-->
    <!--<application
        android:name="com.realchat.ChatApplication"
        android:allowBackup="true"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:theme="@style/AppTheme">
        <activity
            android:name="com.realchat.MainActivity"
            android:label="@string/app_name" >
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
        <activity
            android:name="com.realchat.LoginActivity"
            android:label="@string/title_activity_login"
            android:theme="@style/Theme.AppCompat"
            android:windowSoftInputMode="adjustResize|stateVisible" >
        </activity>

    </application>-->

</manifest>